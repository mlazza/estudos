FONTES
com serif, sem serifa, monospace
padrao = timesnewroman

index: lorem ipsum

css:
p{
  font-family: naoexiste, Arial, "Comic Sans MS", sans-serif;
  font-style: italic;
  *: normal;
  font-size: 12px;
  *: 1.5em;
  font-weight: bold;
  *: 700; #depende da familia da fonte
  font-variant: small-caps; #faz que todas as letras fiquem maiusculas, mas deixa um pouco maior as que ja estavam capitalize  
}

USANDO FONTES CUSTOMIZADAS

index: h1, p
css interno

font-family: ****

1) Google Fonts, busca de fontes
clica no +
colocar no head do html o link da fonte

2) Dá pra baixar tbm e deixa numa pasta fonts, por exemplo, 
>@font-face {
font-family: MinhaFonte;
src(url(./fonts/nomedafonte.ttf)
#se precisar add mais fontes, add mais @font-face

e alterar no font-family no corpo do texto/css

uma dica: site Font Squirrel - sobe as fontes e ele transforma em woff.
Cuidado com fontes muito pesadas!

ESTILO DE LINK

index:
<a class="links" href='#'> cadastrar </a>

css:
.links{
  text-decoration: none;
  color: #bc2035;
  cursor: crosshair;
  /*background: #bc2035;
  padding: 10px;
  padding-top: 5px;
  padding-bottom: 5px;
  border-radius: 10px;
  border: 2px solid #bc2035;
  
}

o link ja vem com alguns estados, quando clicado e nao clicado:

.links:visited{
	color: red;
}

#Quando com o mouse em cima do link:
.links:hover{
  background: #bc2035;
  color: white;
}

#Quando aperta o link:
.links:active{
  background: blue;
  color: white;
}

Alguns valores a testar:

Value	Description
alias	The cursor indicates an alias of something is to be created
all-scroll	The cursor indicates that something can be scrolled in any direction
auto	Default. The browser sets a cursor
cell	The cursor indicates that a cell (or set of cells) may be selected
context-menu	The cursor indicates that a context-menu is available
col-resize	The cursor indicates that the column can be resized horizontally
copy	The cursor indicates something is to be copied
crosshair	The cursor render as a crosshair
default	The default cursor
e-resize	The cursor indicates that an edge of a box is to be moved right (east)
ew-resize	Indicates a bidirectional resize cursor
grab	The cursor indicates that something can be grabbed
grabbing	The cursor indicates that something can be grabbed
help	The cursor indicates that help is available
move	The cursor indicates something is to be moved
n-resize	The cursor indicates that an edge of a box is to be moved up (north)
ne-resize	The cursor indicates that an edge of a box is to be moved up and right (north/east)
nesw-resize	Indicates a bidirectional resize cursor
ns-resize	Indicates a bidirectional resize cursor
nw-resize	The cursor indicates that an edge of a box is to be moved up and left (north/west)
nwse-resize	Indicates a bidirectional resize cursor
no-drop	The cursor indicates that the dragged item cannot be dropped here
none	No cursor is rendered for the element
not-allowed	The cursor indicates that the requested action will not be executed
pointer	The cursor is a pointer and indicates a link
progress	The cursor indicates that the program is busy (in progress)
row-resize	The cursor indicates that the row can be resized vertically
s-resize	The cursor indicates that an edge of a box is to be moved down (south)
se-resize	The cursor indicates that an edge of a box is to be moved down and right (south/east)
sw-resize	The cursor indicates that an edge of a box is to be moved down and left (south/west)
text	The cursor indicates text that may be selected
URL	A comma separated list of URLs to custom cursors. Note: Always specify a generic cursor at the end of the list, in case none of the URL-defined cursors can be used
vertical-text	The cursor indicates vertical-text that may be selected
w-resize	The cursor indicates that an edge of a box is to be moved left (west)
wait	The cursor indicates that the program is busy
zoom-in	The cursor indicates that something can be zoomed in
zoom-out	The cursor indicates that something can be zoomed out

LISTAS

index:
2 listas, 1 sem ordem e outra sem ordem
ul e ol

css:

ul{
  list-style-type: none;
  *: disc;
  *: circle;
  *: square;
  
  list-style-image: url(".../assets/itm.png);
  /*colocando img */
  
  list-style-position: inside;
  margin:0;
  padding: 10px;
  
  background-color: #f3e;
  
}

ol{
  list-style-type: none;
  *: upper-roman;
  *: lower-roman;
  *: lower-alpha;
  *: upper-alpha;
  
  list-style-position: inside;
  margin:0;
  padding: 10px;
  
  background-color: #59e;
}

li{
  border: 1px solid;
  background-color: yellow;
  margin: 5px;
  padding: 5px;
  border-radius: 5px;
}
TAREFA: fazer todos opcoes como link e tirar o sublinhado e alterar as diferentes condicoes de clique

VALORES:

Value	Description
disc	Default value. The marker is a filled circle
armenian	The marker is traditional Armenian numbering
circle	The marker is a circle
cjk-ideographic	The marker is plain ideographic numbers
decimal	The marker is a number
decimal-leading-zero	The marker is a number with leading zeros (01, 02, 03, etc.)
georgian	The marker is traditional Georgian numbering
hebrew	The marker is traditional Hebrew numbering
hiragana	The marker is traditional Hiragana numbering
hiragana-iroha	The marker is traditional Hiragana iroha numbering
katakana	The marker is traditional Katakana numbering
katakana-iroha	The marker is traditional Katakana iroha numbering
lower-alpha	The marker is lower-alpha (a, b, c, d, e, etc.)
lower-greek	The marker is lower-greek
lower-latin	The marker is lower-latin (a, b, c, d, e, etc.)
lower-roman	The marker is lower-roman (i, ii, iii, iv, v, etc.)
none	No marker is shown
square	The marker is a square
upper-alpha	The marker is upper-alpha (A, B, C, D, E, etc.)
upper-greek	The marker is upper-greek
upper-latin	The marker is upper-latin (A, B, C, D, E, etc.)
upper-roman	The marker is upper-roman (I, II, III, IV, V, etc.)


DESAFIO

Olá.....

O desafio desse módulo é criar um cartão de visitas como o modelo em anexo. Eu também coloquei as imagens utilizadas.

Dicas:

O tamanho utilizado foi 400px x 200px
Utilize o conceito de listas para criar os links para as redes sociais
A resolução do desafio está na aula seguinte, mas é importante que você tente ao máximo fazer sozinho antes de assistir a nossa solução.

DESAFIO RESOLVIDO:

assets/
-imgs
css/
-style.css
index

index.html:
title>Desafio CSS
body>
  <div class="card">
    h1 - Igor Oliveira - h1
    <ul>
      ahref - li class - /progbr -li -a
      ..
      ..
      
    </ul>
  </div>

<body

css:
body{
  background-color: black;
}

.card{
  width: 400px;
  height: 200px;
  box-sizing: border-box;
  padding: 1px 20px;
  background: url('../assets/background.png') no repeat;
  background-size: cover;
  margin: auto;
  margin-top: 10%;
}

a{
  text-decoration: none;
  color: black;
}

.instagram{
  list-style-image: url('../assets/insta.png')
}
.twitter{
}
.youtube{
}

MODULO 4 - CSS INTERMEDIARIO

DISPLAY

#responsavel por organizar como cada elemento
deve ser mostrado na tela

index:

css-interno

<body>
div
 div Esta é uma DIV normal -div
 div E aqui a historia <div style="background-color:red; width:500px;height: 50px"> Div de dentro</div> continua -div
-div

div
  <p style="margin:0"> Este é um paragro normal </p>
  <p style="margin:0"> E aqui a historia continua </p>
-div

p
  Aqui eu tenho o inicio de um paragrafo <span style="background-color:green; width: 500px; display:inline-block">  um SPAN no meio</span> E o fim do paragrafo
-p

<p style="background-color:blue">
  Aqui eu tenho o inicio de um paragrafo <div style="background-color:red"> uma div no meio </div> E o fim de um paragrafo
</p>

p
  Aqui eu tenho o inicio de um paragrafo <img src="./assets/imagem.jpg" style="width: 400px; display: none"> e o fim de um paragrafo
-p
</body>



#varios tipos de display:
-block (p, div) *consigo alterar altura, largura
-none
-inline (span)
-inline-block (tem as carac do display inline mas permite alterar altura/largura)

OVERFLOW

index:
style type="text/css">
body{
  font-size: 1.2rem;
}

#container{
  color: yellow;
  background-color: blue;
  width: 300px;
  height: 100px;
  
  overflow: visible;
  *: hidden;
  *: scroll;
  *: auto;
  *-y: scroll;
  *-x: hidden;
}
img{
  width: 400px;
}

<body>
  <div id="container">
    Lorem ipsum.......
    <img src="#">
  </div>

</body>

ALINHAMENTO HORIZONTAL

index:

<style type...

#quadrado{
  width: 50px;
  height: 50px;
  background-color: blue;
  
  #margin-left: 500px;
  margin: auto; /* efeito centralizador do elemento*/
  or
  margin-left:auto; #mantendo elemento a direita
}

#com imagem é diferente

img{
  display: block;
  margin: auto;

}
<body>
  <div id="square">
  </div>


</body>

POSITION

index:

<div class="static quadrado bg-blue">

</div>

<div id="relative quadrado bg-red">

</div>


#para o ultimo position:

<div class='bg-blue ret'>
  <div class='quadrado bg-red'></div>
  <div class='quadrado bg-green sticky'></div>
  <div class='quadrado bg-red'></div>
  <div class='quadrado bg-red'></div>
  <div class='quadrado bg-red'></div>
  <div class='quadrado bg-red'></div>
  
<style type="text/css">

 .static{
  position: static;
 }
 
 .relative{
  position: relative; #permite usar top, left, right, bottom.
  top: 15px;
  left: -40px #desloca o quad red
 
 }
 
 .fixed{
  position: fixed; #em relacao a janela
  right: 20px;
  bottom: 20px;
 
 }
 
 .absolute{
  position: absolute; #parecido static, mas ele pode receber bot, left, right e top; ele nao fica em relacao ao elem. pai, como o relative, o elemento pai nao pode ser static, tem q ser relative
 }
 
 
 

 .quadrado{
   width: 100px;
   height: 100px;
   display: inline-block;
    
   
  }
  
  .retangulo{
   width: 100px;
   height: 500px;
   margin-top: 10px;
   overflow:auto;
  
  }
  
  
  .bg-red{
    background-color: red;
  }
  
  .bg-blue{
    background-color: blue;
  }
  
 
 .sticky{
  position: sticky;
  top: 0; #nao sai da janela no correr do scroll
 }
</style>


FLOAT

index:

<style>

  ul{
    
    list-style: none; 
  }
  
  li{
    float: left; or right
    padding: 10px;
    background-color: #a3b5c7;
    margin: 5px;
  }


  p{
    #display: inline;
    #deixando o texto ao lago da img
    
  } #1
  
  p{
    clear:left; (right, or both, none(default)
  } #2

 #i1{
   float: left;
 }
 
 #i2{
   float: right;
 }

 img{
   float: left; #or right;
 } #substituida por i1 e i2

div{
  border: 1px solid black;
  padding: 10px; #3
  background-color: #b2c3a6; #4
  overflow: auto; #2
  
}

<style>



<body>


  #2<div>
	  <img id="i1" src="img.jpg">
	  <img id="i2" src="img2.jpg>#2
	  <img id="i1" src="img.jpg">#3
	  <img id="i2" src="img2.jpg>#3
	  <p>
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer
	  	Texto qualquer...
	  	v
	  
	  </p>
	  
	#2 <ul>
	  <li>Home</li>
	  <li>Cursos</li>
	  <li>Contato</li>
	
	</ul>
	</div>	  


</body>

ALINHAMENTO VERTICAL

index:

STYLE

.card{
  position: relative; #para o absolute dar certo
  float: left;
  width: 400px;
  height: 200px;
  border: 2px solid green;
  text-align: center;
  
}

.card2{
  clear: left;
  float: left; #nao da pra usar neste caso inline-block
  border: 2px solid green;
  padding-left: 150px;
  padding-right: 150px;
  padding-top: 100px;
  padding-bottom: 100px;


}



.c1{
  background-color: red;
  line-height: 200px; #uma maneira
 
}

.c2{
  color: white;
  position: absolute;
  top: 50%;
  background-color: blue;
  left: 50%;
  
  
  transform: translate(-50%, -50%); #alinhando os textos dos dois cards, X e Y
  
  ### TIRA AS CORES PRA TESTAR

}


BODY

<div class="card">

  <div class="c1">
  
 	 Igor Oliveira
  </div>
</div>

<div class="card">

  <div class="c2">
  
 	 Igor Oliveira
  </div>
</div>

<div class="card2"> #3

  <div class="c3">
  
 	 Igor Oliveira
  </div>
</div>








